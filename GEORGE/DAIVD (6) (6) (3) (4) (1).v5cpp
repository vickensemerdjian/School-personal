{"mode":"Text","textContent":"#pragma region VEXcode Generated Robot Configuration\n// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nservo BillGate = servo(Brain.ThreeWirePort.A);\nmotor OnlyMotor = motor(PORT9, ratio18_1, true);\n\noptical AllSeeing = optical(PORT21);\nservo FloodGate = servo(Brain.ThreeWirePort.B);\nlimit LimitSwitch = limit(Brain.ThreeWirePort.C);\n#pragma endregion VEXcode Generated Robot Configuration\n\n/*----------------------------------------------------------------------------*/\n/*                                                                            */\n/*    Module:       main.cpp                                                  */\n/*    Author:       {Chris Morales, Vicken Semerdjian}                        */\n/*    Created:      {March 2023}                                              */\n/*    Description:  V5 project                                                */\n/*                                                                            */\n/*----------------------------------------------------------------------------*/\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\n void EyeBall(){\n   AllSeeing.setLight(ledState::on);\n   AllSeeing.setLightPower(50,percent);\n }\nint SortState = 0;\n void SortingStuff(){\n\n    if (LimitSwitch.pressing()) {         //Metal Ball\n      BillGate.setPosition(-48,degrees);\n     FloodGate.setPosition(10,degrees);\n       SortState=1;\n     wait(1,seconds);\n  }\n  \n   else if((AllSeeing.hue()>41)&&(AllSeeing.hue()<58)){ //white ball (44)\n     Brain.Screen.print(AllSeeing.hue());\n     BillGate.setPosition(-50,degrees);\n   SortState=1;\n     FloodGate.setPosition(50,degrees);\n   }\n    else if((AllSeeing.hue()>28)&&(AllSeeing.hue()<40)){ //wood ball(32)\n      Brain.Screen.print(AllSeeing.hue());\n     BillGate.setPosition(-50,degrees);\n       SortState=1;\n      FloodGate.setPosition(19,degrees);\n   }\n }\n   \n\n\n\n\n\n\n \n\n\n     \nint main() {\nBillGate.setPosition(50,degrees);\n OnlyMotor.setVelocity(1,percent);\n    OnlyMotor.spin(reverse);\n  while(1==1){\n    EyeBall();\n      while(SortState==0){\n      SortingStuff(); \n     }\n     SortState=0;\n    wait(.5,seconds);\n    Brain.Screen.clearLine(1);\n    BillGate.setPosition(50,degrees);\n  }\n}\n\n\n\n\n","textLanguage":"cpp","rconfig":[{"port":[1],"name":"BillGate","customName":true,"deviceType":"Servo","deviceClass":"servo","setting":{"id":"partner"},"triportSourcePort":22},{"port":[9],"name":"OnlyMotor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[21],"name":"AllSeeing","customName":true,"deviceType":"Optical","deviceClass":"optical","setting":{},"triportSourcePort":22},{"port":[2],"name":"FloodGate","customName":true,"deviceType":"Servo","deviceClass":"servo","setting":{},"triportSourcePort":22},{"port":[3],"name":"LimitSwitch","customName":true,"deviceType":"LimitSwitch","deviceClass":"limit","setting":{},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"2.4.5","minVersion":"2.4.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","target":"Physical"}